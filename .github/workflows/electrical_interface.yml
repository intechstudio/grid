name: "electrical_interface"

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    paths:
      - 'Electrical/Design/INTERFACE/**'
      - '.github/workflows/electrical_interface.yml'
      - '.github/workflows/convert_bottom_position.py'

env:
  PROJECT_NAME: "INTERFACE"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  FabPCB:
    name: PCB fabrication files
    runs-on: ubuntu-latest
    container: "setsoft/kicad_auto:ki7"

    steps:
    - uses: actions/checkout@v2

    - name: Run PCB stuff
      run: |
        make -C Electrical/Design/$PROJECT_NAME

    - name: Print errors
      if: ${{ always() }}
      run: |
        cat Electrical/Design/$PROJECT_NAME/mfg-bot/$PROJECT_NAME-drc.txt
        cat Electrical/Design/$PROJECT_NAME/kibot_error.log

    - name: Set Date
      run: echo "action_date=$(date +'%Y-%m-%d-%H%M')" >> $GITHUB_ENV

    - name: Convert position file
      run: |
        python3 .github/workflows/convert_bottom_position.py ../../Electrical/Design/$PROJECT_NAME/mfg-bot/mfg/$PROJECT_NAME-both_pos.csv ../../Electrical/Design/$PROJECT_NAME/mfg-bot/mfg/$PROJECT_NAME-both_pos_fixed.csv
        rm Electrical/Design/$PROJECT_NAME/mfg-bot/mfg/$PROJECT_NAME-both_pos.csv
  
    - name: Zipping gerber      
      uses: vimtor/action-zip@v1
      with:
        files: Electrical/Design/$PROJECT_NAME/mfg-bot/JLCPCB
        dest: "Electrical/Design/$PROJECT_NAME/mfg-bot/mfg/$PROJECT_NAME-gerber.zip"

    - name: Rename pdf files and removing non-zipped gerber files
      run: |
        mv Electrical/Design/$PROJECT_NAME/mfg-bot/$PROJECT_NAME-erc.txt Electrical/Design/$PROJECT_NAME/mfg-bot/$PROJECT_NAME_erc.txt
        mv Electrical/Design/$PROJECT_NAME/mfg-bot/$PROJECT_NAME-drc.txt Electrical/Design/$PROJECT_NAME/mfg-bot/$PROJECT_NAME_drc.txt
        mv Electrical/Design/$PROJECT_NAME/mfg-bot/Schematic.pdf Electrical/Design/$PROJECT_NAME/mfg-bot/$PROJECT_NAME_Schematic.pdf
        mv Electrical/Design/$PROJECT_NAME/mfg-bot/PCB_Top.pdf Electrical/Design/$PROJECT_NAME/mfg-bot/$PROJECT_NAME_PCB_Top.pdf
        mv Electrical/Design/$PROJECT_NAME/mfg-bot/PCB_Bottom.pdf Electrical/Design/$PROJECT_NAME/mfg-bot/$PROJECT_NAME_PCB_Bottom.pdf
        mv Electrical/Design/$PROJECT_NAME/kibot_error.log Electrical/Design/$PROJECT_NAME/mfg-bot/$PROJECT_NAME_kibot_error.log
        rm -r Electrical/Design/$PROJECT_NAME/mfg-bot/JLCPCB

    - name: Upload results
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: "result_${{ github.workflow }}_${{ env.action_date }}.zip"
        path: |
          Electrical/Design/$PROJECT_NAME/mfg-bot/
        if-no-files-found: warn

    - name: Zipping artifacts      
      uses: vimtor/action-zip@v1
      with:
        files: Electrical/Design/$PROJECT_NAME/mfg-bot/
        dest: "result_${{ github.workflow }}_${{ env.action_date }}.zip"
        
    - uses: tsickert/discord-webhook@v4.0.0
      with:
        webhook-url: ${{ secrets.WEBHOOK_URL }}
        content: "Heyo, fresh PCB files are ready!"
        filename: "result_${{ github.workflow }}_${{ env.action_date }}.zip"
        
    - name: Copy files to preview folder
      run: |
        mkdir -p Preview/Preview/Electrical && cp -r Electrical/Design/$PROJECT_NAME/mfg-bot/* Preview/Preview/Electrical

    - name: Push
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: preview # The branch name where you want to push the assets
        FOLDER: Preview # The directory where your assets are generated
        CLEAR_GLOBS_FILE: ".clear-target-files"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
        MESSAGE: "Build: ({sha}) {msg}" # The commit message

