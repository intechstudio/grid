# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
name: "mechanical_frontpanel"

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/mechanical_frontpanel.yml'
      - '.github/workflows/pythonocc_step_to_stl.py'
      - '.github/workflows/freecad_export.py'
      - '.github/workflows/openscad_preview.sh'
      - 'Mechanical/Design/Frontpanel/grid_frontpanel.FCStd'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

env:
  DESIGN_FILE_PATH: "Mechanical/Design/Frontpanel/grid_frontpanel.FCStd"

jobs:
  freecad_export:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb x11vnc
        sudo apt-get  install snapd
        sudo snap install freecad
        sudo apt-get install -y openscad
        Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        sleep 10  # Give Xvfb some time to start
        x11vnc -display :99 -nopw -listen localhost -xkb -ncache 10 -ncache_cr -forever > /dev/null 2>&1 &

    - name: Run GUI application
      continue-on-error: true
      run: |
        ls
        export DISPLAY=:99
        timeout 1m freecad --hidden $DESIGN_FILE_PATH ./.github/workflows/freecad_export.py step pdf

    - name: Install conda, pythonocc and do the conversion
      run: |
        CONDA_INSTALL_DIR="$HOME/miniconda3"

        # Download and install Miniconda
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p "$CONDA_INSTALL_DIR"
        rm miniconda.sh

        # Add Miniconda to PATH
        export PATH="$CONDA_INSTALL_DIR/bin:$PATH"

        # Initialize conda
        conda init bash

        # Print Miniconda version
        conda --version

        conda install -c conda-forge pythonocc-core=7.7.0 --yes

        conda --version
        python ./.github/workflows/pythonocc_step_to_stl.py

    - name: Generate Preview PNG
      run: |
        ./.github/workflows/openscad_preview.sh

    - name: Stop x11vnc
      run: pkill x11vnc

    - name: Set Date
      run: echo "action_date=$(date +'%Y-%m-%d-%H%M')" >> $GITHUB_ENV
      
    - name: Zipping artifacts      
      uses: vimtor/action-zip@v1
      with:
        files: temp/
        dest: "result_${{ github.workflow }}_${{ env.action_date }}.zip"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: "result_${{ github.workflow }}_${{ env.action_date }}.zip"
        path: temp/*.*    

    - uses: tsickert/discord-webhook@v4.0.0
      with:
        webhook-url: ${{ secrets.WEBHOOK_URL }}
        content: "Hello, your files are ready!"
        filename: "result_${{ github.workflow }}_${{ env.action_date }}.zip"
   
    - name: Copy files to preview folder
      run: |
        mkdir -p Preview/Preview/Mechanical && cp temp/* Preview/Preview/Mechanical

    - name: Commit the files
      run: |          
        git config --global user.email "bot@intech.studio"
        git config --global user.name "Intech Bot"
        git status
        git add Preview/*
        git status
        git commit -m "BOT ${{ github.sha }} ${{ github.workflow }}"
